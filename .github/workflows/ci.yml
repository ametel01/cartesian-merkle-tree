name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SCARB_VERSION: 2.12.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Cache Scarb packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/scarb
          key: ${{ runner.os }}-scarb-${{ hashFiles('**/Scarb.lock') }}
          restore-keys: |
            ${{ runner.os }}-scarb-

      - name: Build
        run: scarb build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Check formatting
        run: scarb fmt --check

      - name: Format diff
        if: failure()
        run: scarb fmt --diff

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Setup Starknet Foundry
        uses: foundry-rs/setup-snfoundry@v3
        with:
          starknet-foundry-version: 0.48.1

      - name: Cache Scarb packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/scarb
          key: ${{ runner.os }}-scarb-${{ hashFiles('**/Scarb.lock') }}
          restore-keys: |
            ${{ runner.os }}-scarb-

      - name: Run tests
        run: snforge test

      - name: Run tests with detailed resources
        run: snforge test --detailed-resources

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}

      - name: Run linter
        run: scarb lint
        continue-on-error: true # Don't fail CI on lint warnings
